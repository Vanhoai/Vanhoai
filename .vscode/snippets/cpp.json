{
	"tree": {
		"prefix": "tree",
		"body": [
			"#include <iostream>",
			"using namespace std;",
			"",
			"struct TreeNode {",
			"    int val;",
			"    TreeNode *left;",
			"    TreeNode *right;",
			"    TreeNode() : val(0), left(nullptr), right(nullptr) {}",
			"    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}",
			"    TreeNode(int x, TreeNode *left, TreeNode *right)",
			"        : val(x), left(left), right(right) {}",
			"};",
			"",
			"void makeEdge(TreeNode *&root, int v, char c) {",
			"    if (c == 'L')",
			"        root->left = new TreeNode(v);",
			"    else",
			"        root->right = new TreeNode(v);",
			"}",
			"",
			"void addEdge(TreeNode *&root, int u, int v, char c) {",
			"    if (!root)",
			"        return;",
			"",
			"    if (root->val == u) {",
			"        makeEdge(root, v, c);",
			"        return;",
			"    }",
			"",
			"    addEdge(root->left, u, v, c);",
			"    addEdge(root->right, u, v, c);",
			"}",
			"",
			"int main() {",
			"    ios::sync_with_stdio(false);",
			"    cin.tie(nullptr);",
			"    cout.tie(nullptr);",
			"",
			"    freopen(\"input.txt\", \"r\", stdin);",
			"    freopen(\"output.txt\", \"w\", stdout);",
			"",
			"    int TC;",
			"    cin >> TC;",
			"    while (TC--) {",
			"        int n;",
			"        cin >> n;",
			"        TreeNode *root = nullptr;",
			"        for (int i = 0; i < n; ++i) {",
			"            int u, v;",
			"            char c;",
			"            cin >> u >> v >> c;",
			"            if (root == nullptr)",
			"                root = new TreeNode(u);",
			"",
			"            addEdge(root, u, v, c);",
			"        }",
			"    }",
			"",
			"    return 0;",
			"}"
		]
	},
	"main": {
		"prefix": "main",
		"body": [
			"#include <iostream>",
			"using namespace std;",
			"",
			"int main() {",
			"    ios::sync_with_stdio(false);",
			"    cin.tie(nullptr);",
			"    cout.tie(nullptr);",
			"",
			"    freopen(\"input.txt\", \"r\", stdin);",
			"    freopen(\"output.txt\", \"w\", stdout);",
			"",
			"    return 0;",
			"}"
		]
	},
	"macros": {
		"prefix": "macros",
		"body": [
			"#define ms(s, n)      memset(s, n, sizeof(s))",
			"#define all(a)        a.begin(), a.end()",
			"#define sz(a)         int((a).size())",
			"#define FOR(i, a, b)  for (int i = (a); i <= (b); ++i)",
			"#define FORD(i, a, b) for (int i = (a); i >= b; --i)",
			"",
			"#define PB push_back",
			"#define MP make_pair",
			"#define F  first",
			"#define S  second",
			"",
			"typedef long long ll;",
			"typedef pair<int, int> pi;",
			"typedef vector<int> vi;",
			"typedef vector<pi> vii;",
			"typedef vector<vi> vvi;",
			"",
			"const int MOD = (int) 1e9 + 7;",
			"const int INF = (int) 1e9 + 1;",
			"const int DEG = (int) 10001;",
			"",
			"inline ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }",
			"inline ll lcm(ll a, ll b) { return a / gcd(a, b) * b; }"
		]
	}
}